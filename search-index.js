var searchIndex = {};
searchIndex["zero_formatter"] = {"doc":"Implementation of [ZeroFormatter](https://github.com/neuecc/ZeroFormatter) in Rust.","items":[[4,"ZeroFormatterError","zero_formatter","",null,null],[13,"IoError","","",0,null],[13,"FromUtf8Error","","",0,null],[13,"InvalidBinary","","",0,null],[11,"fmt","","",0,null],[11,"invalid_binary","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"zeroformatterresult"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[0,"util","","",null,null],[5,"check_non_null","zero_formatter::util","",null,{"inputs":[{"name":"r"},{"name":"u64"}],"output":{"name":"zeroformatterresult"}}],[6,"ZeroFormatterResult","zero_formatter","",null,null],[8,"Formatter","","Formatter provide serializer and deserializer for ZeroFormatter.",null,null],[10,"serialize","","",1,null],[10,"deserialize","","",1,null],[14,"declare_buffer","","",null,null],[14,"has_value_formatter_methods","","",null,null],[14,"has_value_formatter","","",null,null],[14,"option_formatter","","",null,null],[14,"struct_formatter","","`struct_formatter` define sturct type and provide sequential fields formatter.\nBut, `struct_formatter` does not support [versioning](https://github.com/neuecc/ZeroFormatter/tree/1.6.0#versioning).",null,null],[14,"object_formatter","","`object_formatter` define struct type and provide formatter.\n`object_formatter` support [versioning](https://github.com/neuecc/ZeroFormatter/tree/1.6.0#versioning).",null,null],[14,"union_formatter","","`union_formatter` define struct type and provide formatter.",null,null]],"paths":[[4,"ZeroFormatterError"],[8,"Formatter"]]};
initSearch(searchIndex);
